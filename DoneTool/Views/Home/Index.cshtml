@model DoneTool.Models.ViewModels.PageModel

<link rel="stylesheet" href="~/css/taskLayout.css">

<div class="header-section">
    <div class="header-content">
        <h1 class="task-title">@Model.TaskTitle</h1>
        <p class="developer-name">@Model.DeveloperName</p>
    </div>
</div>

<div class="task-checklist">
    <table class="table">
        <thead>
            <tr class="header-row">
                <th>Steps</th>
                <th>Status</th>
                <th>Guard</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.Checks)
            {
                <tr data-taskchecklist-id="@task.ID" data-last-updated="@task.LastUpdated.ToString("o")">
                    <td>@task.Step</td>
                    <td>
                        <div class="custom-dropdown">
                            <div class="status-button-wrapper">
                                <button class="status-button @("status-" + task.SelectedStatus.ToLower())" onclick="toggleStatus(this)">
                                    @task.SelectedStatus
                                </button>
                                <button class="arrow-button status-@task.SelectedStatus.ToLower()" onclick="toggleDropdownMenu(this)">
                                    <span class="dropdown-arrow">▼</span>
                                </button>
                            </div>
                            <ul class="dropdown-menu">
                                <li class="status-todo" data-value="TODO">TODO</li>
                                <li class="status-skipped" data-value="SKIPPED">SKIPPED</li>
                            </ul>
                            <input type="hidden" name="status" class="form-control status-dropdown" value="@task.SelectedStatus">
                        </div>
                    </td>
                    <td>
                        <div class="custom-guard-dropdown">
                            <input type="text" class="form-control guard-search" placeholder="Search Guards" value="@task.Guard" onclick="toggleGuardDropdown(this)" oninput="filterGuardOptions(this)">
                            <ul class="guard-dropdown-menu">
                                <li class="dropdown-section">Suggested</li>
                                @if (!string.IsNullOrEmpty(Model.TamName))
                                {
                                    <li class="guard-option" data-value="@Model.TamName">@Model.TamName</li>
                                }
                                @if (!string.IsNullOrEmpty(Model.CreatorName))
                                {
                                    <li class="guard-option" data-value="@Model.CreatorName">@Model.CreatorName</li>
                                }
                                @if (!string.IsNullOrEmpty(Model.ProductOwnerName))
                                {
                                    <li class="guard-option" data-value="@Model.ProductOwnerName">@Model.ProductOwnerName</li>
                                }
                                @foreach (var codeOwnerName in Model.CodeOwnerNames)
                                {
                                    <li class="guard-option" data-value="@codeOwnerName">@codeOwnerName</li>
                                }
                                <li class="dropdown-section">Other</li>
                                @foreach (var guard in Model.Guards)
                                {
                                    <li class="guard-option" data-value="@guard">@guard</li>
                                }
                            </ul>
                        </div>
                    </td>
                    <td>
                        <textarea asp-for="@task.Comment" class="form-control" placeholder="Enter your comment">@task.Comment</textarea>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="commentModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Provide a reason for skipping</h2>
        <textarea id="skipComment" class="form-control" placeholder="Enter your comment (min 10 characters)"></textarea>
        <button id="submitSkip" onclick="submitSkip()">Submit</button>
    </div>
</div>

<div id="customReloadModal" class="custom-reload-modal">
    <div class="custom-reload-modal-content">
        <p>The data has been updated by someone else. Please reload the page and try again.</p>
        <button id="customReloadButton">Reload Page</button>
    </div>
</div>

<script src="~/js/taskManager.js"></script>

<script>
function toggleGuardDropdown(input) {
    const dropdown = input.nextElementSibling;
    dropdown.classList.toggle('show'); // Toggle the visibility of the dropdown

    // Close dropdown if clicking outside
    document.addEventListener('click', function(event) {
        if (!input.parentElement.contains(event.target)) {
            dropdown.classList.remove('show');
        }
    });
}

function filterGuardOptions(input) {
    const filter = input.value.toLowerCase();
    const dropdown = input.nextElementSibling;
    const options = dropdown.querySelectorAll(".guard-option");

    options.forEach(option => {
        if (option.textContent.toLowerCase().includes(filter)) {
            option.style.display = "";
        } else {
            option.style.display = "none";
        }
    });
}

document.querySelectorAll('.guard-option').forEach(option => {
    option.addEventListener('click', function() {
        const input = this.parentElement.previousElementSibling;
        input.value = this.dataset.value; // Set the input value to the selected option
        this.parentElement.classList.remove('show'); // Hide the dropdown after selection
    });
});
</script>
